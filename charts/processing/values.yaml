# Default values for processing.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Fraudaverse Processing service specific values
processing:
  # the service can prime it's config from a file or MongoDb. Default value
  # boots an empty config, which does not do anything but respond to /status API requests
  # if MONGO is set, processing uses the MongoDb values in "mongo" sub-dictionary and cfgDb and cfgColl
  # values to find the config in the correct db/collection of the database.
  primer: MONGO 
  cfgFile: cfg/config.json
  mode: API # API / BATCH from file / GRPC(not implemented yet)
  api:
    ip: 0.0.0.0
    port: 3030
    tls: 0 # "1"/"true" enables tls. Requires tlsServerCertSecretName and tlsServerKeySecretName as K8S Secrets 
    # tlsServerCertSecretName: # K8S Secret name containing the ServerCert as ENV API_TLS_SERVER_CERT 
    # tlsServerKeySecretName: # K8S Secret name containing the ServerCert as ENV API_TLS_SERVER_KEY
  mongo:
    # uri:  # if not set, it will be automated with ".Release.Name-configmongodb"
    cfgDb: Settings
    cfgColl: Configuration
    user: fa
    password: fa1234
    tls:
  useCfgWorkers: 0
  mainWorkerThreads: 8
  cfgWorkerThreads: 0
  log: INFO

# trx-cache (redis) settings
datacacheredis:
  enabled: yes
  image:
    registry: docker.io
    pullPolicy: IfNotPresent
    repository: redis/redis-stack-server
    tag: "7.0.6-RC5"

# mongodb for configs and transaction storage
configmongodb:
  enabled: yes
  architecture: standalone
  auth:
    usernames:
      - fa
    passwords:
      - fa1234
    databases:
      - admin
  persistence:
    enabled: false # true

replicaCount: 2

image:
  repository: 560924052112.dkr.ecr.us-east-1.amazonaws.com/processing
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v0.1.0

# e.g.
# kubectl create secret docker-registry fraudaverse-ecr --docker-server=560924052112.dkr.ecr.us-east-1.amazonaws.com --docker-username=AWS --docker-password=$(aws ecr get-login-password --region us-east-1) --namespace=default
imagePullSecrets:
  - name: fraudaverse-ecr
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use. n
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
