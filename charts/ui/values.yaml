# Default values for ui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repositoryBackend: 560924052112.dkr.ecr.us-east-1.amazonaws.com/ui-backend
  repositoryBackendProc: 560924052112.dkr.ecr.us-east-1.amazonaws.com/pipeline-backend
  repositoryFrontend: 560924052112.dkr.ecr.us-east-1.amazonaws.com/ui-frontend
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: fraudaverse-ecr
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 3000
  fsGroup: 2000

securityContext: 
  allowPrivilegeEscalation: false
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  portfrontend: 8080
  portbackend: 8000
  portbackendproc: 8081

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    #kubernetes.io/tls-acme: "true"
  hosts:
    - host: "localhost"
      paths:
        - path: /admin
          pathType: Prefix
          backend:
            service:
              name: ui-backend
              port:
                number: 8000
        - path: /api/investigation
          pathType: Prefix
          backend:
            service:
              name: ui-backend
              port:
                number: 8000
        - path: /api/configuration
          pathType: Prefix
          backend:
            service:
              name: ui-backendproc
              port:
                number: 8081
        - path: /
          pathType: Prefix
          backend:
            service:
              name: ui-frontend
              port:
                number: 8080
        
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


# Backend Service Options
backend:
  Envs:
    DB_INV_HOST: mongodb://{{- .Release.Name }}-mongodb:13250 # mongodb:// string for the provided mongodb
    DB_INV_NAME: Investigation
    DB_DRL_HOST: mongodb://{{- .Release.Name }}-mongodb:13250 # mongodb:// string for the provided mongodb
    DB_DRL_NAME: DefinedRiskLists
    AUTH_METHOD: DEMO
    # AUTH_METHOD: BEARER
    # JWKS_ENDPOINT: http://keycloak:8080/realms/myrealm/protocol/openid-connect/certs
    ALLOWED_HOST: '*' # allowed hosts to connect to django backend

backendProc:
  Envs:
    ALLOWED_HOST: '*' # allowed hosts to connect to django backend
    MONGO_URI: mongodb://{{- .Release.Name }}-mongodb:13250
    MONGO_CFG_DB: NewBank
    MONGO_CFG_COLL: Configuration
    AUTH_METHOD: DEMO
    # AUTH_METHOD: BEARER
    # JWKS_ENDPOINT: http://keycloak:8080/realms/myrealm/protocol/openid-connect/certs
    ##
    # TRACER and LOGGER work the same way as processing
    ##
    LOGGER: PRETTY
    LOG_LEVEL: backend=TRACE
    TRACER: LOG
    TRACE_LEVEL: DEBUG


mongodb:
  enabled: yes
  # architecture: standalone
  # # mongodb container port
  containerPorts:
    mongodb: 13250
  service:
    ports:
      # mongodb exposing service port
      mongodb: 13250
  # # mongo pod security context
  # podSecurityContext:
  #   enabled: true 
  #   runAsUser: 1000
  #   runAsGroup: 3000
  #   fsGroup: 2000
  # # mongo container security context
  # containerSecurityContext:
  #   enabled: true
  #   allowPrivilegeEscalation: false
  auth:
    enabled: false # TODO
  persistence:
    enabled: false # TODO
